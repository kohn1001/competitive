/*
T(n) = T(n-1) + T(n-1) + T(n-1) + T(n-1) = 4*T(n-1) = 4*4*T(n-2) = 4*4*4*T(n-3)....= 4^k*T(n-k)
n-k = 0 ---> k=n O(4^n)
(**) T(n-1) = T(n-2) + T(n-2) +T(n-2)...
*/
#include <iostream>
using namespace std;
void drawline(int x_from, int y_from, int x_to, int y_to);

void constructHtree(int start_length, int depth, int x, int y)
{
   if(depth == 0) {return;}
   
   drawline(x-start_length/2, y, x+start_length/2, y);//check this method
   drawline(x-start_length/2, y-start_length/2, x-start_length/2, y + start_length/2);
   drawline(x+start_length/2, y-start_length/2, x+start_length/2, y+start_length/2);
   //top right
   constructHtree(start_length/squart(2) , depth-1, x+start_length/2, y+start_length/2);
   //bottom right
   //getting back from the first call, here depth is 2 again 
   constructHtree(start_length/squart(2) , depth-1, x+start_length/2, y-start_length/2);
   //top left
   constructHtree(start_length/squart(2) , depth-1, x-start_length/2, y+start_length/2);
   //bottom left
   constructHtree(start_length/squart(2) , depth-1, x-start_length/2, y-start_length/2);
}
